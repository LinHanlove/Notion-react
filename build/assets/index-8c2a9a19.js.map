{"version":3,"file":"index-8c2a9a19.js","sources":["../../src/view/Notebook/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { TransitionDown, TransitionUp } from \"@/components/Transition\";\r\nimport { Avatar, Divider, List, Skeleton } from \"antd\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as article from \"@/service/article\";\r\nimport {\r\n  JSXElementConstructor,\r\n  ReactElement,\r\n  ReactNode,\r\n  ReactPortal,\r\n  useEffect,\r\n} from \"react\";\r\nimport { ResponseCode, getUserInfo } from \"@/utils\";\r\n\r\nexport default function Notebook() {\r\n  const navigate = useNavigate();\r\n\r\n  const user = JSON.parse(getUserInfo()!);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const [articleList, setArticleList] = useState<any[]>([]);\r\n\r\n  const [pageInfo, setPageInfo] = useState({\r\n    page: 1,\r\n    page_size: 10,\r\n    count: 0,\r\n  });\r\n\r\n  const getUserArticleList = async () => {\r\n    try {\r\n      console.log(loading);\r\n      if (loading) return;\r\n      setLoading(true);\r\n      const res = await article.getUserArticleList({\r\n        author_id: user.id,\r\n        page: pageInfo.page,\r\n        page_size: pageInfo.page_size,\r\n      });\r\n      if (res.code === ResponseCode.SUCCESS) {\r\n        setArticleList([...articleList, ...res.data.data]);\r\n        setPageInfo({\r\n          ...pageInfo,\r\n          page: pageInfo.page + 1,\r\n          count: res.data.total.count,\r\n        });\r\n        articleList.length === res.data.total.count\r\n          ? setStatus(true)\r\n          : setStatus(false);\r\n        setLoading(false);\r\n      } else {\r\n        setPageInfo({\r\n          ...pageInfo,\r\n          page: pageInfo.page,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    void getUserArticleList();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"scrollableDiv\" className=\"h-[100vh] overflow-y-auto\">\r\n      <TransitionDown>\r\n        <div className=\"h-[30vh] bg-[teal] text-center text-[var(--text-color)]\">\r\n          <div className=\"leading-[30vh] text-[20px] font-bold\">\r\n            make img img...\r\n          </div>\r\n        </div>\r\n      </TransitionDown>\r\n      <TransitionUp>\r\n        <div className=\"h-auto bg-[--background] flex justify-center \">\r\n          <InfiniteScroll\r\n            className=\"md:w-[50vw] w-[90vw] h-full \"\r\n            dataLength={articleList.length}\r\n            next={getUserArticleList}\r\n            hasMore={!status}\r\n            loader={<Skeleton avatar paragraph={{ rows: 2 }} active />}\r\n            endMessage={<Divider plain>ËøôÊòØÂÖ®ÈÉ®‰∫ÜÔºÅÊ≤°ÊúâÊõ¥Â§ö‰∫Ü~~~ ü§ê</Divider>}\r\n            scrollableTarget=\"scrollableDiv\"\r\n          >\r\n            <List\r\n              itemLayout=\"vertical\"\r\n              dataSource={articleList}\r\n              renderItem={(item: {\r\n                article_id: any;\r\n                article_cover: string | undefined;\r\n                avatar: any;\r\n                title:\r\n                  | string\r\n                  | number\r\n                  | boolean\r\n                  | ReactElement<any, string | JSXElementConstructor<any>>\r\n                  | Iterable<ReactNode>\r\n                  | ReactPortal\r\n                  | null\r\n                  | undefined;\r\n                article_summary:\r\n                  | string\r\n                  | number\r\n                  | boolean\r\n                  | ReactElement<any, string | JSXElementConstructor<any>>\r\n                  | Iterable<ReactNode>\r\n                  | ReactPortal\r\n                  | null\r\n                  | undefined;\r\n                viewers:\r\n                  | string\r\n                  | number\r\n                  | boolean\r\n                  | ReactElement<any, string | JSXElementConstructor<any>>\r\n                  | Iterable<ReactNode>\r\n                  | ReactPortal\r\n                  | null\r\n                  | undefined;\r\n                nickname:\r\n                  | string\r\n                  | number\r\n                  | boolean\r\n                  | ReactElement<any, string | JSXElementConstructor<any>>\r\n                  | Iterable<ReactNode>\r\n                  | ReactPortal\r\n                  | null\r\n                  | undefined;\r\n                like:\r\n                  | string\r\n                  | number\r\n                  | boolean\r\n                  | ReactElement<any, string | JSXElementConstructor<any>>\r\n                  | Iterable<ReactNode>\r\n                  | ReactPortal\r\n                  | null\r\n                  | undefined;\r\n                article_label: string[];\r\n              }) => (\r\n                <List.Item\r\n                  onClick={() => {\r\n                    navigate(\"/preview-notes\", {\r\n                      state: { id: item.article_id },\r\n                    });\r\n                  }}\r\n                  key={item.article_id}\r\n                  extra={\r\n                    <img\r\n                      width={120}\r\n                      alt=\"logo\"\r\n                      src={\r\n                        item.article_cover !== \"\"\r\n                          ? item.article_cover\r\n                          : \"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                      }\r\n                    />\r\n                  }\r\n                  className=\"w-full   pb-2\"\r\n                >\r\n                  <List.Item.Meta\r\n                    className=\" h-full overflow-hidden text-[var(--lightGreen)]\"\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<div className=\"text-[teal]\">{item.title}</div>}\r\n                    description={\r\n                      <div className=\"h-30 text-[var(--text-color)]\">\r\n                        <div className=\"h-10 overflow-hidden\">\r\n                          {item.article_summary}\r\n                        </div>\r\n                        <div className=\"w-full h-8 flex justify-between items-center flex-wrap \">\r\n                          <div className=\"w-1/2 flex items-center invisible sm:visible\">\r\n                            <div className=\"flex items-center\">\r\n                              <Icon\r\n                                icon=\"mdi:hot\"\r\n                                className=\"text-[red] mr-1\"\r\n                              />\r\n                              <div>{item.viewers}</div>\r\n                            </div>\r\n                            <div className=\"flex items-center mx-5\">\r\n                              <Icon icon=\"jam:write\" className=\" mr-1\" />\r\n                              <div>{item.nickname}</div>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Icon\r\n                                icon=\"flat-color-icons:like\"\r\n                                className=\" mr-1\"\r\n                              />\r\n                              <div>{item.like}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"w-1/2 flex justify-end items-center invisible sm:visible\">\r\n                            {item.article_label.map((label: string) => {\r\n                              return (\r\n                                <div className=\"flex h-full items-center mx-1 truncate rounded-lg text-[var(--lightGreen)] border-dashed border  border-[var(--lightGreen)] px-1\">\r\n                                  <Icon\r\n                                    icon=\"solar:bookmark-opened-outline\"\r\n                                    className=\"text-[orange] mr-1\"\r\n                                  />\r\n                                  {label}\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </InfiniteScroll>\r\n        </div>\r\n      </TransitionUp>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Notebook","navigate","useNavigate","user","getUserInfo","loading","setLoading","useState","status","setStatus","articleList","setArticleList","pageInfo","setPageInfo","getUserArticleList","res","article.getUserArticleList","ResponseCode","useEffect","jsxs","jsx","TransitionDown","TransitionUp","InfiniteScroll","Skeleton","Divider","List","item","Avatar","Icon","label"],"mappings":"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"}