{"version":3,"file":"Skeleton-5b4f41be.js","sources":["../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Element.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/style/index.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Avatar.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Button.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Image.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Input.js","../../node_modules/.pnpm/@ant-design+icons-svg@4.3.1/node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","../../node_modules/.pnpm/@ant-design+icons@5.2.6_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Node.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Paragraph.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Title.js","../../node_modules/.pnpm/registry.npmmirror.com+antd@5.10.3_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/skeleton/Skeleton.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","\"use client\";\n\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: `${size}px`\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = size => Object.assign({\n  width: size * 5,\n  minWidth: size * 5\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(imageSizeBase * 2)), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: imageSizeBase * 4,\n        maxHeight: imageSizeBase * 4\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = size => Object.assign({\n  width: size * 2,\n  minWidth: size * 2\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: controlHeight * 2,\n      minWidth: controlHeight * 2\n    }, genSkeletonElementButtonSize(controlHeight))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', token => {\n  const {\n    componentCls\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: token.controlHeight * 1.5,\n    borderRadius: 100,\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n}, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonAvatar = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    shape = 'circle',\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls', 'className']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-avatar`,\n    shape: shape,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonAvatar;","\"use client\";\n\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nconst SkeletonImage = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${prefixCls}-image-svg`\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: `${prefixCls}-image-path`\n  })))));\n};\nexport default SkeletonImage;","\"use client\";\n\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;","// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DotChartOutlined.displayName = 'DotChartOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DotChartOutlined);","\"use client\";\n\nimport DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName);\n  const content = children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(DotChartOutlined, null);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, content)));\n};\nexport default SkeletonNode;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","\"use client\";\n\n/* eslint-disable jsx-a11y/heading-has-content */\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Title = _ref => {\n  let {\n    prefixCls,\n    className,\n    width,\n    style\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    className: classNames(prefixCls, className),\n    style: Object.assign({\n      width\n    }, style)\n  });\n};\nexport default Title;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    skeleton\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;"],"names":["Element","props","prefixCls","className","style","size","shape","sizeCls","classNames","shapeCls","sizeStyle","React.useMemo","React.createElement","Element$1","skeletonClsLoading","Keyframes","genSkeletonElementCommonSize","genSkeletonElementAvatarSize","genSkeletonColor","token","genSkeletonElementInputSize","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","borderRadius","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","useStyle","genComponentStyleHook","skeletonToken","mergeToken","colorFillContent","colorFill","gradientToColor","SkeletonAvatar","customizePrefixCls","rootClassName","active","getPrefixCls","React.useContext","ConfigContext","wrapSSR","hashId","otherProps","omit","cls","SkeletonAvatar$1","SkeletonButton","block","SkeletonButton$1","path","SkeletonImage","SkeletonImage$1","SkeletonInput","SkeletonInput$1","DotChartOutlined","DotChartOutlinedSvg","ref","AntdIcon","_extends","DotChartOutlined$1","React.forwardRef","SkeletonNode","children","content","SkeletonNode$1","Paragraph","getWidth","index","width","rows","rowList","_toConsumableArray","_","Paragraph$1","Title","_ref","Title$1","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","getTitleBasicProps","hasAvatar","getParagraphBasicProps","basicProps","Skeleton","loading","avatar","title","paragraph","round","direction","skeleton","avatarNode","avatarProps","contentNode","$title","titleProps","paragraphNode","paragraphProps","Skeleton$1"],"mappings":"qKAIA,MAAMA,EAAUC,GAAS,CACvB,KAAM,CACJ,UAAAC,EACA,UAAAC,EACA,MAAAC,EACA,KAAAC,EACA,MAAAC,CACD,EAAGL,EACEM,EAAUC,EAAW,CACzB,CAAC,GAAGN,CAAS,KAAK,EAAGG,IAAS,QAC9B,CAAC,GAAGH,CAAS,KAAK,EAAGG,IAAS,OAClC,CAAG,EACKI,EAAWD,EAAW,CAC1B,CAAC,GAAGN,CAAS,SAAS,EAAGI,IAAU,SACnC,CAAC,GAAGJ,CAAS,SAAS,EAAGI,IAAU,SACnC,CAAC,GAAGJ,CAAS,QAAQ,EAAGI,IAAU,OACtC,CAAG,EACKI,EAAYC,EAAa,QAAC,IAAM,OAAON,GAAS,SAAW,CAC/D,MAAOA,EACP,OAAQA,EACR,WAAY,GAAGA,CAAI,IACvB,EAAM,CAAE,EAAE,CAACA,CAAI,CAAC,EACd,OAAoBO,EAAAA,cAAoB,OAAQ,CAC9C,UAAWJ,EAAWN,EAAWK,EAASE,EAAUN,CAAS,EAC7D,MAAO,OAAO,OAAO,OAAO,OAAO,GAAIO,CAAS,EAAGN,CAAK,CAC5D,CAAG,CACH,EACAS,EAAeb,EC3BTc,EAAqB,IAAIC,EAAU,uBAAwB,CAC/D,KAAM,CACJ,mBAAoB,UACrB,EACD,OAAQ,CACN,mBAAoB,OACrB,CACH,CAAC,EACKC,EAA+BX,IAAS,CAC5C,OAAQA,EACR,WAAY,GAAGA,CAAI,IACrB,GACMY,EAA+BZ,GAAQ,OAAO,OAAO,CACzD,MAAOA,CACT,EAAGW,EAA6BX,CAAI,CAAC,EAC/Ba,EAAmBC,IAAU,CACjC,WAAYA,EAAM,0BAClB,eAAgB,YAChB,cAAeL,EACf,kBAAmBK,EAAM,8BACzB,wBAAyB,OACzB,wBAAyB,UAC3B,GACMC,EAA8Bf,GAAQ,OAAO,OAAO,CACxD,MAAOA,EAAO,EACd,SAAUA,EAAO,CACnB,EAAGW,EAA6BX,CAAI,CAAC,EAC/BgB,EAA2BF,GAAS,CACxC,KAAM,CACJ,kBAAAG,EACA,kBAAAC,EACA,cAAAC,EACA,gBAAAC,EACA,gBAAAC,CACD,EAAGP,EACJ,MAAO,CACL,CAAC,GAAGG,CAAiB,EAAE,EAAG,OAAO,OAAO,CACtC,QAAS,eACT,cAAe,MACf,WAAYC,CAClB,EAAON,EAA6BO,CAAa,CAAC,EAC9C,CAAC,GAAGF,CAAiB,GAAGA,CAAiB,SAAS,EAAG,CACnD,aAAc,KACf,EACD,CAAC,GAAGA,CAAiB,GAAGA,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAA,EAAIL,EAA6BQ,CAAe,CAAC,EAChH,CAAC,GAAGH,CAAiB,GAAGA,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAA,EAAIL,EAA6BS,CAAe,CAAC,CACpH,CACA,EACMC,EAA0BR,GAAS,CACvC,KAAM,CACJ,cAAAK,EACA,eAAAI,EACA,iBAAAC,EACA,gBAAAJ,EACA,gBAAAC,EACA,kBAAAH,CACD,EAAGJ,EACJ,MAAO,CACL,CAAC,GAAGU,CAAgB,EAAE,EAAG,OAAO,OAAO,CACrC,QAAS,eACT,cAAe,MACf,WAAYN,EACZ,aAAcK,CACpB,EAAOR,EAA4BI,CAAa,CAAC,EAC7C,CAAC,GAAGK,CAAgB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAET,EAA4BK,CAAe,CAAC,EAC1F,CAAC,GAAGI,CAAgB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAET,EAA4BM,CAAe,CAAC,CAC9F,CACA,EACMI,EAA8BzB,GAAQ,OAAO,OAAO,CACxD,MAAOA,CACT,EAAGW,EAA6BX,CAAI,CAAC,EAC/B0B,EAA0BZ,GAAS,CACvC,KAAM,CACJ,iBAAAa,EACA,cAAAC,EACA,kBAAAV,EACA,eAAAK,CACD,EAAGT,EACJ,MAAO,CACL,CAAC,GAAGa,CAAgB,EAAE,EAAG,OAAO,OAAO,OAAO,OAAO,CACnD,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,cAAe,MACf,WAAYT,EACZ,aAAcK,CACf,EAAEE,EAA4BG,EAAgB,CAAC,CAAC,EAAG,CAClD,CAAC,GAAGD,CAAgB,OAAO,EAAG,CAC5B,KAAM,SACP,EACD,CAAC,GAAGA,CAAgB,MAAM,EAAG,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEF,EAA4BG,CAAa,CAAC,EAAG,CACxG,SAAUA,EAAgB,EAC1B,UAAWA,EAAgB,CACnC,CAAO,EACD,CAAC,GAAGD,CAAgB,OAAOA,CAAgB,aAAa,EAAG,CACzD,aAAc,KACf,CACP,CAAK,EACD,CAAC,GAAGA,CAAgB,GAAGA,CAAgB,SAAS,EAAG,CACjD,aAAc,KACf,CACL,CACA,EACME,EAAgC,CAACf,EAAOd,EAAM8B,IAAc,CAChE,KAAM,CACJ,kBAAAC,CACD,EAAGjB,EACJ,MAAO,CACL,CAAC,GAAGgB,CAAS,GAAGC,CAAiB,SAAS,EAAG,CAC3C,MAAO/B,EACP,SAAUA,EACV,aAAc,KACf,EACD,CAAC,GAAG8B,CAAS,GAAGC,CAAiB,QAAQ,EAAG,CAC1C,aAAc/B,CACf,CACL,CACA,EACMgC,EAA+BhC,GAAQ,OAAO,OAAO,CACzD,MAAOA,EAAO,EACd,SAAUA,EAAO,CACnB,EAAGW,EAA6BX,CAAI,CAAC,EAC/BiC,EAA2BnB,GAAS,CACxC,KAAM,CACJ,eAAAS,EACA,kBAAAQ,EACA,cAAAZ,EACA,gBAAAC,EACA,gBAAAC,EACA,kBAAAH,CACD,EAAGJ,EACJ,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAC3E,CAAC,GAAGiB,CAAiB,EAAE,EAAG,OAAO,OAAO,CACtC,QAAS,eACT,cAAe,MACf,WAAYb,EACZ,aAAcK,EACd,MAAOJ,EAAgB,EACvB,SAAUA,EAAgB,CAChC,EAAOa,EAA6Bb,CAAa,CAAC,CAC/C,EAAEU,EAA8Bf,EAAOK,EAAeY,CAAiB,CAAC,EAAG,CAC1E,CAAC,GAAGA,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAEC,EAA6BZ,CAAe,CAAC,CAChG,CAAG,EAAGS,EAA8Bf,EAAOM,EAAiB,GAAGW,CAAiB,KAAK,CAAC,EAAG,CACrF,CAAC,GAAGA,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAEC,EAA6BX,CAAe,CAAC,CAChG,CAAG,EAAGQ,EAA8Bf,EAAOO,EAAiB,GAAGU,CAAiB,KAAK,CAAC,CACtF,EAEMG,GAAepB,GAAS,CAC5B,KAAM,CACJ,aAAAqB,EACA,kBAAAlB,EACA,iBAAAmB,EACA,qBAAAC,EACA,kBAAAN,EACA,iBAAAP,EACA,iBAAAG,EACA,cAAAR,EACA,gBAAAC,EACA,gBAAAC,EACA,kBAAAH,EACA,QAAAoB,EACA,SAAAC,EACA,aAAAC,EACA,YAAAC,EACA,YAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,mBAAAC,CACD,EAAG/B,EACJ,MAAO,CACL,CAAC,GAAGqB,CAAY,EAAE,EAAG,CACnB,QAAS,QACT,MAAO,OACP,CAAC,GAAGA,CAAY,SAAS,EAAG,CAC1B,QAAS,aACT,iBAAkBG,EAClB,cAAe,MAEf,CAAC,GAAGrB,CAAiB,EAAE,EAAG,OAAO,OAAO,CACtC,QAAS,eACT,cAAe,MACf,WAAYC,CACtB,EAAWN,EAA6BO,CAAa,CAAC,EAC9C,CAAC,GAAGF,CAAiB,SAAS,EAAG,CAC/B,aAAc,KACf,EACD,CAAC,GAAGA,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAEL,EAA6BQ,CAAe,CAAC,EAC5F,CAAC,GAAGH,CAAiB,KAAK,EAAG,OAAO,OAAO,CAAE,EAAEL,EAA6BS,CAAe,CAAC,CAC7F,EACD,CAAC,GAAGc,CAAY,UAAU,EAAG,CAC3B,QAAS,aACT,MAAO,OACP,cAAe,MAEf,CAAC,GAAGC,CAAgB,EAAE,EAAG,CACvB,MAAO,OACP,OAAQK,EACR,WAAYvB,EACZ,aAAcwB,EACd,CAAC,KAAKL,CAAoB,EAAE,EAAG,CAC7B,iBAAkBhB,CACnB,CACF,EAED,CAAC,GAAGgB,CAAoB,EAAE,EAAG,CAC3B,QAAS,EACT,OAAQ,CACN,MAAO,OACP,OAAQM,EACR,UAAW,OACX,WAAYzB,EACZ,aAAcwB,EACd,OAAQ,CACN,iBAAkBE,CACnB,CACF,CACF,EACD,CAAC,GAAGP,CAAoB,sDAAsD,EAAG,CAC/E,MAAO,KACR,CACF,EACD,CAAC,WAAWF,CAAY,UAAU,EAAG,CACnC,CAAC,GAAGC,CAAgB,KAAKC,CAAoB,OAAO,EAAG,CACrD,aAAAG,CACD,CACF,CACF,EACD,CAAC,GAAGL,CAAY,gBAAgBA,CAAY,UAAU,EAAG,CAEvD,CAAC,GAAGC,CAAgB,EAAE,EAAG,CACvB,iBAAkBG,EAClB,CAAC,KAAKF,CAAoB,EAAE,EAAG,CAC7B,iBAAkBQ,CACnB,CACF,CACF,EAED,CAAC,GAAGV,CAAY,GAAGA,CAAY,UAAU,EAAG,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAClG,QAAS,eACT,MAAO,MACR,EAAEF,EAAyBnB,CAAK,CAAC,EAAGE,EAAyBF,CAAK,CAAC,EAAGQ,EAAwBR,CAAK,CAAC,EAAGY,EAAwBZ,CAAK,CAAC,EAEtI,CAAC,GAAGqB,CAAY,GAAGA,CAAY,QAAQ,EAAG,CACxC,MAAO,OACP,CAAC,GAAGJ,CAAiB,EAAE,EAAG,CACxB,MAAO,MACR,EACD,CAAC,GAAGP,CAAgB,EAAE,EAAG,CACvB,MAAO,MACR,CACF,EAED,CAAC,GAAGW,CAAY,GAAGA,CAAY,SAAS,EAAG,CACzC,CAAC;AAAA,UACGC,CAAgB;AAAA,UAChBC,CAAoB;AAAA,UACpBpB,CAAiB;AAAA,UACjBc,CAAiB;AAAA,UACjBP,CAAgB;AAAA,UAChBG,CAAgB;AAAA,OACnB,EAAG,OAAO,OAAO,CAAE,EAAEd,EAAiBC,CAAK,CAAC,CAC9C,CACL,CACA,EAEAgC,EAAeC,EAAsB,WAAYjC,GAAS,CACxD,KAAM,CACJ,aAAAqB,CACD,EAAGrB,EACEkC,EAAgBC,EAAWnC,EAAO,CACtC,kBAAmB,GAAGqB,CAAY,UAClC,iBAAkB,GAAGA,CAAY,SACjC,qBAAsB,GAAGA,CAAY,aACrC,kBAAmB,GAAGA,CAAY,UAClC,iBAAkB,GAAGA,CAAY,SACjC,iBAAkB,GAAGA,CAAY,SACjC,cAAerB,EAAM,cAAgB,IACrC,aAAc,IACd,0BAA2B,0BAA0BA,EAAM,iBAAiB,SAASA,EAAM,eAAe,SAASA,EAAM,iBAAiB,QAC1I,8BAA+B,MACnC,CAAG,EACD,MAAO,CAACoB,GAAac,CAAa,CAAC,CACrC,EAAGlC,GAAS,CACV,KAAM,CACJ,iBAAAoC,EACA,UAAAC,CACD,EAAGrC,EACEI,EAAoBgC,EACpBE,EAAkBD,EACxB,MAAO,CACL,MAAOjC,EACP,iBAAkBkC,EAClB,kBAAAlC,EACA,gBAAAkC,EACA,YAAatC,EAAM,cAAgB,EACnC,YAAaA,EAAM,eACnB,mBAAoBA,EAAM,SAAWA,EAAM,UAC3C,kBAAmBA,EAAM,cAAgB,CAC7C,CACA,EAAG,CACD,iBAAkB,CAAC,CAAC,QAAS,mBAAmB,EAAG,CAAC,mBAAoB,iBAAiB,CAAC,CAC5F,CAAC,ECzSKuC,GAAiBzD,GAAS,CAC9B,KAAM,CACJ,UAAW0D,EACX,UAAAxD,EACA,cAAAyD,EACA,OAAAC,EACA,MAAAvD,EAAQ,SACR,KAAAD,EAAO,SACR,EAAGJ,EACE,CACJ,aAAA6D,CACJ,EAAMC,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EACtCiE,EAAaC,EAAKnE,EAAO,CAAC,YAAa,WAAW,CAAC,EACnDoE,EAAM7D,EAAWN,EAAW,GAAGA,CAAS,WAAY,CACxD,CAAC,GAAGA,CAAS,SAAS,EAAG2D,CAC7B,EAAK1D,EAAWyD,EAAeM,CAAM,EACnC,OAAOD,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,CACZ,EAAezD,gBAAoBZ,EAAS,OAAO,OAAO,CACzD,UAAW,GAAGE,CAAS,UACvB,MAAOI,EACP,KAAMD,CACV,EAAK8D,CAAU,CAAC,CAAC,CAAC,CAClB,EACAG,GAAeZ,GC1BTa,GAAiBtE,GAAS,CAC9B,KAAM,CACJ,UAAW0D,EACX,UAAAxD,EACA,cAAAyD,EACA,OAAAC,EACA,MAAAW,EAAQ,GACR,KAAAnE,EAAO,SACR,EAAGJ,EACE,CACJ,aAAA6D,CACJ,EAAMC,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EACtCiE,EAAaC,EAAKnE,EAAO,CAAC,WAAW,CAAC,EACtCoE,EAAM7D,EAAWN,EAAW,GAAGA,CAAS,WAAY,CACxD,CAAC,GAAGA,CAAS,SAAS,EAAG2D,EACzB,CAAC,GAAG3D,CAAS,QAAQ,EAAGsE,CAC5B,EAAKrE,EAAWyD,EAAeM,CAAM,EACnC,OAAOD,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,CACZ,EAAezD,gBAAoBZ,EAAS,OAAO,OAAO,CACzD,UAAW,GAAGE,CAAS,UACvB,KAAMG,CACV,EAAK8D,CAAU,CAAC,CAAC,CAAC,CAClB,EACAM,GAAeF,GC5BTG,GAAO,k3BACPC,GAAgB1E,GAAS,CAC7B,KAAM,CACJ,UAAW0D,EACX,UAAAxD,EACA,cAAAyD,EACA,MAAAxD,EACA,OAAAyD,CACD,EAAG5D,EACE,CACJ,aAAA6D,CACJ,EAAMC,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EACtCmE,EAAM7D,EAAWN,EAAW,GAAGA,CAAS,WAAY,CACxD,CAAC,GAAGA,CAAS,SAAS,EAAG2D,CAC7B,EAAK1D,EAAWyD,EAAeM,CAAM,EACnC,OAAOD,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,CACf,EAAkBzD,EAAAA,cAAoB,MAAO,CACzC,UAAWJ,EAAW,GAAGN,CAAS,SAAUC,CAAS,EACrD,MAAOC,CACX,EAAkBQ,EAAAA,cAAoB,MAAO,CACzC,QAAS,gBACT,MAAO,6BACP,UAAW,GAAGV,CAAS,YAC3B,EAAkBU,EAAAA,cAAoB,OAAQ,CAC1C,EAAG8D,GACH,UAAW,GAAGxE,CAAS,aAC3B,CAAG,CAAC,CAAC,CAAC,CAAC,CACP,EACA0E,GAAeD,GC7BTE,GAAgB5E,GAAS,CAC7B,KAAM,CACJ,UAAW0D,EACX,UAAAxD,EACA,cAAAyD,EACA,OAAAC,EACA,MAAAW,EACA,KAAAnE,EAAO,SACR,EAAGJ,EACE,CACJ,aAAA6D,CACJ,EAAMC,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EACtCiE,EAAaC,EAAKnE,EAAO,CAAC,WAAW,CAAC,EACtCoE,EAAM7D,EAAWN,EAAW,GAAGA,CAAS,WAAY,CACxD,CAAC,GAAGA,CAAS,SAAS,EAAG2D,EACzB,CAAC,GAAG3D,CAAS,QAAQ,EAAGsE,CAC5B,EAAKrE,EAAWyD,EAAeM,CAAM,EACnC,OAAOD,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,CACZ,EAAezD,gBAAoBZ,EAAS,OAAO,OAAO,CACzD,UAAW,GAAGE,CAAS,SACvB,KAAMG,CACV,EAAK8D,CAAU,CAAC,CAAC,CAAC,CAClB,EACAW,GAAeD,GCjCf,IAAIE,GAAmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,OAAS,EAAE,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,0RAA0R,EAAI,CAAC,EAAI,KAAQ,YAAa,MAAS,UAAU,EACze,MAAAC,GAAeD,GCKf,IAAIA,GAAmB,SAA0B9E,EAAOgF,EAAK,CAC3D,OAAoBrE,EAAmB,cAACsE,EAAUC,EAAS,CAAA,EAAIlF,EAAO,CACpE,IAAKgF,EACL,KAAMD,EACP,CAAA,CAAC,CACJ,EAIA,MAAAI,GAA4BC,EAAAA,WAAiBN,EAAgB,ECTvDO,GAAerF,GAAS,CAC5B,KAAM,CACJ,UAAW0D,EACX,UAAAxD,EACA,cAAAyD,EACA,MAAAxD,EACA,OAAAyD,EACA,SAAA0B,CACD,EAAGtF,EACE,CACJ,aAAA6D,CACJ,EAAMC,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EACtCmE,EAAM7D,EAAWN,EAAW,GAAGA,CAAS,WAAY,CACxD,CAAC,GAAGA,CAAS,SAAS,EAAG2D,CAC7B,EAAKK,EAAQ/D,EAAWyD,CAAa,EAC7B4B,EAAUD,GAAmE3E,EAAmB,cAACmE,GAAkB,IAAI,EAC7H,OAAOd,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,CACf,EAAkBzD,EAAAA,cAAoB,MAAO,CACzC,UAAWJ,EAAW,GAAGN,CAAS,SAAUC,CAAS,EACrD,MAAOC,CACX,EAAKoF,CAAO,CAAC,CAAC,CACd,EACAC,GAAeH,GC3BTI,GAAYzF,GAAS,CACzB,MAAM0F,EAAWC,GAAS,CACxB,KAAM,CACJ,MAAAC,EACA,KAAAC,EAAO,CACR,EAAG7F,EACJ,GAAI,MAAM,QAAQ4F,CAAK,EACrB,OAAOA,EAAMD,CAAK,EAGpB,GAAIE,EAAO,IAAMF,EACf,OAAOC,CAGb,EACQ,CACJ,UAAA3F,EACA,UAAAC,EACA,MAAAC,EACA,KAAA0F,CACD,EAAG7F,EACE8F,EAAUC,EAAmB,MAAMF,CAAI,CAAC,EAAE,IAAI,CAACG,EAAGL,IAGxDhF,EAAAA,cAAoB,KAAM,CACxB,IAAKgF,EACL,MAAO,CACL,MAAOD,EAASC,CAAK,CACtB,CACF,CAAA,CAAC,EACF,OAAoBhF,EAAAA,cAAoB,KAAM,CAC5C,UAAWJ,EAAWN,EAAWC,CAAS,EAC1C,MAAOC,CACR,EAAE2F,CAAO,CACZ,EACAG,GAAeR,GCnCTS,GAAQC,GAAQ,CACpB,GAAI,CACF,UAAAlG,EACA,UAAAC,EACA,MAAA0F,EACA,MAAAzF,CACD,EAAGgG,EACJ,OAAoBxF,EAAAA,cAAoB,KAAM,CAC5C,UAAWJ,EAAWN,EAAWC,CAAS,EAC1C,MAAO,OAAO,OAAO,CACnB,MAAA0F,CACD,EAAEzF,CAAK,CACZ,CAAG,CACH,EACAiG,GAAeF,GCLf,SAASG,EAAkBC,EAAM,CAC/B,OAAIA,GAAQ,OAAOA,GAAS,SACnBA,EAEF,EACT,CACA,SAASC,GAAoBC,EAAUC,EAAc,CACnD,OAAID,GAAY,CAACC,EAER,CACL,KAAM,QACN,MAAO,QACb,EAES,CACL,KAAM,QACN,MAAO,QACX,CACA,CACA,SAASC,GAAmBC,EAAWF,EAAc,CACnD,MAAI,CAACE,GAAaF,EACT,CACL,MAAO,KACb,EAEME,GAAaF,EACR,CACL,MAAO,KACb,EAES,EACT,CACA,SAASG,GAAuBD,EAAWH,EAAU,CACnD,MAAMK,EAAa,CAAA,EAEnB,OAAI,CAACF,GAAa,CAACH,KACjBK,EAAW,MAAQ,OAGjB,CAACF,GAAaH,EAChBK,EAAW,KAAO,EAElBA,EAAW,KAAO,EAEbA,CACT,CACA,MAAMC,EAAW9G,GAAS,CACxB,KAAM,CACJ,UAAW0D,EACX,QAAAqD,EACA,UAAA7G,EACA,cAAAyD,EACA,MAAAxD,EACA,SAAAmF,EACA,OAAA0B,EAAS,GACT,MAAAC,EAAQ,GACR,UAAAC,EAAY,GACZ,OAAAtD,EACA,MAAAuD,CACD,EAAGnH,EACE,CACJ,aAAA6D,EACA,UAAAuD,EACA,SAAAC,CACJ,EAAMvD,EAAAA,WAAiBC,CAAa,EAC5B9D,EAAY4D,EAAa,WAAYH,CAAkB,EACvD,CAACM,EAASC,CAAM,EAAIf,EAASjD,CAAS,EAC5C,GAAI8G,GAAW,EAAE,YAAa/G,GAAQ,CACpC,MAAM2G,EAAY,CAAC,CAACK,EACdR,EAAW,CAAC,CAACS,EACbR,EAAe,CAAC,CAACS,EAEvB,IAAII,EACJ,GAAIX,EAAW,CACb,MAAMY,EAAc,OAAO,OAAO,OAAO,OAAO,CAC9C,UAAW,GAAGtH,CAAS,SAC/B,EAASsG,GAAoBC,EAAUC,CAAY,CAAC,EAAGJ,EAAkBW,CAAM,CAAC,EAE1EM,EAA0B3G,EAAmB,cAAC,MAAO,CACnD,UAAW,GAAGV,CAAS,SAC/B,EAAsBU,EAAAA,cAAoBZ,EAAS,OAAO,OAAO,GAAIwH,CAAW,CAAC,CAAC,CAC7E,CACD,IAAIC,EACJ,GAAIhB,GAAYC,EAAc,CAE5B,IAAIgB,EACJ,GAAIjB,EAAU,CACZ,MAAMkB,EAAa,OAAO,OAAO,OAAO,OAAO,CAC7C,UAAW,GAAGzH,CAAS,QACjC,EAAWyG,GAAmBC,EAAWF,CAAY,CAAC,EAAGJ,EAAkBY,CAAK,CAAC,EACzEQ,EAAsB9G,EAAmB,cAACuF,GAAO,OAAO,OAAO,CAAE,EAAEwB,CAAU,CAAC,CAC/E,CAED,IAAIC,EACJ,GAAIlB,EAAc,CAChB,MAAMmB,EAAiB,OAAO,OAAO,OAAO,OAAO,CACjD,UAAW,GAAG3H,CAAS,YACjC,EAAW2G,GAAuBD,EAAWH,CAAQ,CAAC,EAAGH,EAAkBa,CAAS,CAAC,EAC7ES,EAA6BhH,EAAmB,cAAC8E,GAAW,OAAO,OAAO,CAAE,EAAEmC,CAAc,CAAC,CAC9F,CACDJ,EAA2B7G,EAAmB,cAAC,MAAO,CACpD,UAAW,GAAGV,CAAS,UAC/B,EAASwH,EAAQE,CAAa,CACzB,CACD,MAAMvD,EAAM7D,EAAWN,EAAW,CAChC,CAAC,GAAGA,CAAS,cAAc,EAAG0G,EAC9B,CAAC,GAAG1G,CAAS,SAAS,EAAG2D,EACzB,CAAC,GAAG3D,CAAS,MAAM,EAAGmH,IAAc,MACpC,CAAC,GAAGnH,CAAS,QAAQ,EAAGkH,CACzB,EAAEE,GAAa,KAA8B,OAASA,EAAS,UAAWnH,EAAWyD,EAAeM,CAAM,EAC3G,OAAOD,EAAsBrD,EAAmB,cAAC,MAAO,CACtD,UAAWyD,EACX,MAAO,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEiD,GAAa,KAA8B,OAASA,EAAS,KAAK,EAAGlH,CAAK,CACvH,EAAOmH,EAAYE,CAAW,CAAC,CAC5B,CACD,OAAO,OAAOlC,EAAa,IAAcA,EAAW,IACtD,EACAwB,EAAS,OAASxC,GAClBwC,EAAS,OAASrD,GAClBqD,EAAS,MAAQlC,GACjBkC,EAAS,MAAQpC,GACjBoC,EAAS,KAAOzB,GAIhB,MAAAwC,GAAef","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}